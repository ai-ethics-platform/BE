# ./nginx.conf
worker_processes auto;  # CPU 코어 수에 맞게 자동 설정

events {
    worker_connections 2048;  # 연결 수 증가
    use epoll;  # Linux에서 더 효율적인 이벤트 모델
    multi_accept on;  # 여러 연결을 동시에 수락
}

http {
    # 기본 성능 최적화 설정
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # WebSocket 타임아웃 설정 (24시간)
    proxy_read_timeout 86400s;
    proxy_send_timeout 86400s;
    proxy_connect_timeout 60s;
    
    # 버퍼 설정 (WebSocket용)
    proxy_buffering off;
    proxy_request_buffering off;
    
    upstream backend {
        server backend:8000;
        keepalive 32;  # 백엔드 연결 유지
    }

    server {
        listen 80;
        server_name dilemmai.org www.dilemmai.org;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot/www;
            try_files $uri =404;
        }

        location /ws/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket 특화 설정
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            proxy_connect_timeout 60s;
            proxy_buffering off;
        }

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        server_name dilemmai.org www.dilemmai.org;

        ssl_certificate /etc/letsencrypt/live/dilemmai.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/dilemmai.org/privkey.pem;

        location /ws/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket 특화 설정
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            proxy_connect_timeout 60s;
            proxy_buffering off;
        }

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}