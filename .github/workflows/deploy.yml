name: deploy

on:
  push:
    branches:
      - main

jobs:
  Deploy-to-EC2:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Decode private key
        run: |
          echo "${{ secrets.EC2_KEY_B64 }}" | base64 -d > key.pem
          chmod 600 key.pem

      - name: Connect and deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key_path: key.pem
          port: 22
          script: |
            echo "[1] 프로젝트 위치 이동 또는 클론"
            cd ~
            if [ -d "ai_ethics_game" ]; then
              cd ai_ethics_game
              git pull origin main
            else
              git clone https://github.com/ai-ethics-platform/BE.git ai_ethics_game
              cd ai_ethics_game
            fi

            echo "[2] .env 파일 생성"
            cat > .env << EOF
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=${{ secrets.DB_NAME }}
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            ALGORITHM=HS256
            ACCESS_TOKEN_EXPIRE_MINUTES=60
            AUDIO_UPLOAD_DIR=static/audio
            MAX_AUDIO_SIZE_MB=10
            BACKEND_CORS_ORIGINS=["http://localhost:3000", "http://localhost:8000"]
            EOF

            echo "[3] 도커 리셋 및 빌드"
            docker-compose down || true
            docker system prune -af
            docker-compose up -d --build

            echo "[4] 헬스 체크"
            sleep 10
            curl -f http://localhost:8000/health || exit 1

            echo "✅ Deployment Completed Successfully!"